{"version":3,"sources":["logo.svg","containers/translate/strings.js","containers/main/actions.js","redux/constants/actionTypes.js","containers/notes/NotesList.js","containers/notes/NoteDetail.js","containers/header/Header.js","containers/main/Main.js","containers/redirect/Redirect.js","routerHistory.js","Routers.js","containers/translate/Translate.js","containers/main/reducers.js","redux/reduxReducer.js","redux/reduxConf.js","index.js"],"names":["module","exports","__webpack_require__","p","strings","LocalizedStrings","en","title","addNew","add","BSC","cancel","delete","edit","save","editSuccess","createSuccess","cz","loadNotesList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","fullResult","result","wrap","_context","prev","next","fetch","headers","Accept","Content-Type","sent","ok","json","t0","type","payload","t1","message","error","stop","_x","apply","this","arguments","setSelectedNote","note","setCreateFlag","flag","addNewNote","_ref2","_callee2","getState","notes","index","postBody","_context2","main","notesList","length","id","objectSpread","defineProperty","method","body","JSON","stringify","success","_x2","_x3","editNote","_ref3","_callee3","_context3","concat","_x4","deleteNote","_ref4","_callee4","_context4","_x5","setLanguage","language","NotesList","openDetail","_this","props","_this2","react_default","createElement","className","style","overflowY","maxHeight","map","key","onClick","padding","icon","margin","React","Component","connect","state","bindActionCreators","TextArea","Input","NoteDetail","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","editedNote","newNote","onCancel","selectedNote","saveEditedNote","_this$props","createFlag","height","width","placeholder","value","onChange","e","target","es_button","RadioButton","Radio","Button","RadioGroup","Group","Header","addNote","changeLanguage","defLang","navigator","userLanguage","block","defaultValue","buttonStyle","Main","containers_header_Header","containers_notes_NotesList","containers_notes_NoteDetail","Redirect","console","log","src","logo","alt","createBrowserHistory","Routers","react_router","history","exact","path","render","containers_main_Main","containers_redirect_Redirect","Translate","userLang","findLanguage","en_US","cs_CZ","locale_provider","locale","Routers_Routers","initialState","rootReducer","combineReducers","undefined","middlewares","push","action","Promise","resolve","abrupt","thunk","middleware","applyMiddleware","store","createStore","reducerConf","ReactDOM","es","translate_Translate","document","getElementById"],"mappings":"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","file":"static/js/main.d5711ff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import LocalizedStrings from \"react-localization\";\n\nconst lang = {\n  en: {\n    title: \"Application for creating and managing notes\",\n    addNew: \"Add a new note\",\n    add: \"Add\",\n    BSC: \"BSC\",\n    cancel: \"Cancel\",\n    delete: \"Delete\",\n    edit: \"Edit\",\n    save: \"Save\",\n    editSuccess: \"Note successfully edited!\",\n    createSuccess: \"Note successfully created!\"\n  },\n  cz: {\n    title: \"Aplikace pro vytváření a správu poznámek\",\n    addNew: \"Přidat novou poznámku\",\n    add: \"Přidat\",\n    BSC: \"BSC\",\n    cancel: \"Zrušit\",\n    delete: \"Vymazat\",\n    edit: \"Upravit\",\n    save: \"Uložit\",\n    editSuccess: \"Poznámka úspěšně upravena!\",\n    createSuccess: \"Poznámka úspěšně vytvořena!\"\n  }\n};\n\nexport const strings = new LocalizedStrings(lang);\n","import {\r\n  GET_NOTES_LIST,\r\n  SET_SELECTED_NOTE,\r\n  SET_CREATE_FLAG,\r\n  SET_LANGUAGE\r\n} from \"../../redux/constants/actionTypes\";\r\nimport { message } from \"antd\";\r\nimport { strings } from \"../translate/strings\";\r\n\r\nexport const loadNotesList = () => async (dispatch) => {\r\n  try {\r\n    const fullResult = await fetch(`http://private-9aad-note10.apiary-mock.com/notes`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const result = fullResult.ok ? await fullResult.json() : [];\r\n\r\n    dispatch({ type: GET_NOTES_LIST, payload: result });\r\n  } catch (e) {\r\n    dispatch({ type: GET_NOTES_LIST, payload: [] });\r\n    message.error(\"Load notes failed\");\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const setSelectedNote = note => ({\r\n  type: SET_SELECTED_NOTE,\r\n  payload: note\r\n});\r\n\r\nexport const setCreateFlag = flag => ({\r\n  type: SET_CREATE_FLAG,\r\n  payload: flag\r\n});\r\n\r\nexport const addNewNote = (note) => async (dispatch, getState) => {\r\n  const notes = getState().main.notesList;\r\n  const index = notes[notes.length - 1].id;\r\n\r\n  const postBody = {\r\n    ...notes,\r\n    [index]: {\r\n      id: index + 1,\r\n      title: note\r\n    }\r\n  };\r\n\r\n  try {\r\n    const fullResult = await fetch(`http://private-9aad-note10.apiary-mock.com/notes`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(postBody)\r\n    });\r\n\r\n    if (fullResult.ok) {\r\n      message.success(strings.createSuccess);\r\n      dispatch({\r\n        type: SET_CREATE_FLAG,\r\n        payload: false\r\n      });\r\n      await loadNotesList()(dispatch);\r\n    }\r\n  } catch (e) {\r\n    message.error(\"Load notes failed\");\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const editNote = (id) => async (dispatch) => {\r\n  try {\r\n    const fullResult = await fetch(`http://private-9aad-note10.apiary-mock.com/notes/${id}`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"PUT\"\r\n    });\r\n\r\n    if (fullResult.ok) {\r\n      message.success(strings.editSuccess);\r\n      dispatch({\r\n        type: SET_CREATE_FLAG,\r\n        payload: false\r\n      });\r\n      await loadNotesList()(dispatch);\r\n    }\r\n  } catch (e) {\r\n    message.error(\"Edit note failed\");\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const deleteNote = id => async (dispatch) => {\r\n  await fetch(`http://private-9aad-note10.apiary-mock.com/notes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  });\r\n\r\n  await loadNotesList()(dispatch);\r\n};\r\n\r\nexport const setLanguage = language => ({\r\n  type: SET_LANGUAGE,\r\n  payload: language\r\n});","export const GET_NOTES_LIST = \"GET_NOTES_LIST\";\nexport const EDIT_NOTE = \"EDIT_NOTE\";\nexport const SET_SELECTED_NOTE = \"SET_SELECTED_NOTE\";\nexport const SET_CREATE_FLAG = \"SET_CREATE_FLAG\";\nexport const SET_LANGUAGE = \"SET_LANGUAGE\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Icon } from \"antd\";\nimport \"./NotesList.scss\";\nimport { loadNotesList, setSelectedNote, setCreateFlag } from '../main/actions';\n\nclass NotesList extends React.Component {\n  openDetail = note => {\n    this.props.setSelectedNote(note);\n    this.props.setCreateFlag(false);\n  }\n\n  render() {\n    return (\n      <div className=\"note-list-layout\">\n        <div style={{ overflowY: \"auto\", maxHeight: \"100vh\" }} className=\"scrollable-container\">\n          {this.props.notes.map(note => (\n            <div key={`area-${note.id}`}>\n              <div className=\"hoverable-list-item note\"\n                onClick={() => this.openDetail(note)}>\n                <div style={{ padding: \"2px\" }}>\n                  <Icon style={{ margin: \"10px\" }} type=\"edit\" />{note.title}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.main.notesList\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      loadNotesList,\n      setSelectedNote,\n      setCreateFlag\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(NotesList);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Button, Input } from \"antd\";\nimport \"./NoteDetail.scss\";\nimport { addNewNote, setSelectedNote, setCreateFlag, deleteNote, editNote } from '../main/actions';\nimport { strings } from \"../translate/strings\";\n\nconst { TextArea } = Input;\n\nclass NoteDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newNote: \"\",\n      editedNote: \"\"\n    };\n  }\n\n  editNote = note => {\n    this.setState({\n      editedNote: note.title\n    });\n    this.props.setCreateFlag(true);\n  };\n\n  addNewNote = () => {\n    if (this.state.newNote.length !== 0) {\n      this.props.addNewNote(this.state.newNote);\n    }\n  }\n\n  onCancel = () => {\n    this.props.setCreateFlag(false);\n    this.setState({ newNote: \"\", editedNote: \"\" })\n  }\n\n  deleteNote = () => {\n    this.props.deleteNote(this.props.selectedNote.id);\n    this.props.setSelectedNote(null);\n  }\n\n  saveEditedNote = () => {\n    if (this.state.editedNote !== this.props.selectedNote.title) {\n      this.props.editNote(this.props.selectedNote.id);\n    }\n  }\n\n  render() {\n    const { selectedNote, createFlag } = this.props;\n\n    return (\n      <div className=\"note-detail-layout\">\n        {selectedNote ?\n          createFlag ?\n            <div className=\"text-area\">\n              <TextArea\n                style={{ height: \"90%\", width: \"100%\" }}\n                placeholder=\"Add new note ... \"\n                value={this.state.editedNote}\n                onChange={e => this.setState({ editedNote: e.target.value })}\n              />\n              <div className=\"action-buttons\">\n                <Button onClick={this.onCancel}>{strings.cancel}</Button>\n                <Button onClick={this.deleteNote}>{strings.delete}</Button>\n                <Button onClick={this.saveEditedNote}>{strings.save}</Button>\n              </div>\n            </div>\n            :\n            <div>\n              <div className=\"note-detail\">{selectedNote.title}</div>\n              <div className=\"action-buttons\">\n                <Button onClick={() => this.props.setSelectedNote(null)}>{strings.cancel}</Button>\n                <Button onClick={this.deleteNote}>{strings.delete}</Button>\n                <Button onClick={() => this.editNote(selectedNote)}>{strings.edit}</Button>\n              </div>\n            </div>\n          :\n          createFlag ?\n            <div className=\"text-area\">\n              <TextArea\n                style={{ height: \"95%\", width: \"100%\" }}\n                placeholder=\"Add a new note ... \"\n                value={this.state.newNote}\n                onChange={e => this.setState({ newNote: e.target.value })}\n              />\n              <div className=\"action-buttons\">\n                <Button onClick={this.onCancel}>{strings.cancel}</Button>\n                <Button onClick={this.addNewNote}>{strings.add}</Button>\n              </div>\n            </div>\n            :\n            <div className=\"bsc-text\">{strings.BSC}</div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedNote: state.main.selectedNote,\n    notes: state.main.notesList,\n    createFlag: state.main.newNote\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      setCreateFlag,\n      setSelectedNote,\n      addNewNote,\n      deleteNote,\n      editNote\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NoteDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Button, Radio } from \"antd\";\nimport { setCreateFlag, setSelectedNote, setLanguage } from '../main/actions';\nimport { strings } from \"../translate/strings\";\nimport './Header.scss';\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nclass Header extends React.Component {\n  addNote = () => {\n    this.props.setCreateFlag(true);\n    this.props.setSelectedNote(null);\n  }\n\n  changeLanguage = e => {\n    this.props.setLanguage(e.target.value);\n  }\n\n  render() {\n    let defLang = this.props.language || navigator.language || navigator.userLanguage;\n\n    return (\n      <div className=\"header row\">\n        <div className=\"title\">\n          <h1 className=\"flex-grow\">{strings.title}</h1>\n        </div>\n        <div className=\"add-button\">\n          <Button block type=\"primary\" onClick={this.addNote}>{strings.addNew}</Button>\n        </div>\n        <div className=\"language\">\n          <RadioGroup onChange={this.changeLanguage} defaultValue={defLang} buttonStyle=\"solid\">\n            <RadioButton style={{ padding: \"0 5px\" }} value=\"en\">EN</RadioButton>\n            <RadioButton style={{ padding: \"0 5px\" }} value=\"cz\">CZ</RadioButton>\n          </RadioGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.main.language\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      setCreateFlag,\n      setSelectedNote,\n      setLanguage\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport './Main.scss';\nimport NotesList from '../notes/NotesList';\nimport NoteDetail from '../notes/NoteDetail';\nimport Header from '../header/Header';\nimport { loadNotesList, setSelectedNote } from './actions';\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.loadNotesList();\n  }\n\n  render() {\n    return (\n      <div className=\"flex-container\">\n        <Header />\n        <div className=\"wrapper\">\n          <NotesList />\n          <NoteDetail />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notesList: state.main.notesList\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      loadNotesList,\n      setSelectedNote\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(Main);\n","import React, { Component } from 'react';\nimport logo from '../../logo.svg';\nimport './Redirect.css';\n\nclass Redirect extends Component {\n  render() {\n    console.log(\"redirect\");\n    return (\n      <div className=\"Redirect\">\n        <header className=\"Redirect-header\">\n          <img src={logo} className=\"Redirect-logo\" alt=\"logo\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Redirect;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Main from \"./containers/main/Main\";\nimport Redirect from \"./containers/redirect/Redirect\";\nimport history from \"./routerHistory\";\n\n\nexport default class Routers extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\" render={props => <Main {...props} />} />\n          <Route exact path=\"/redirect\" render={props => <Redirect {...props} />} />\n          <Route render={() => <h1>Page not found</h1>} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\n\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { LocaleProvider } from \"antd\";\r\nimport en_US from \"antd/lib/locale-provider/en_US\";\r\nimport cs_CZ from \"antd/lib/locale-provider/cs_CZ\";\r\nimport \"moment/locale/cs\";\r\nimport \"moment/locale/en-gb\";\r\nimport Routers from \"../../Routers\";\r\nimport { strings } from \"./strings\";\r\n\r\nclass Translate extends React.Component {\r\n  render() {\r\n    const userLang = this.props.language || navigator.language || navigator.userLanguage;\r\n    const findLanguage = ((userLang === \"en\" && en_US) || (userLang === \"cz\" && cs_CZ) || en_US);\r\n\r\n    strings.setLanguage(userLang);\r\n    return (\r\n      <LocaleProvider locale={findLanguage}>\r\n        <Routers />\r\n      </LocaleProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  language: state.main.language || ''\r\n});\r\n\r\nexport default connect(mapStateToProps)(Translate);\r\n","import {\r\n  GET_NOTES_LIST,\r\n  SET_SELECTED_NOTE,\r\n  SET_CREATE_FLAG,\r\n  SET_LANGUAGE\r\n} from \"../../redux/constants/actionTypes\";\r\n\r\nconst initialState = {\r\n  notesList: [],\r\n  selectedNote: null,\r\n  newNote: false,\r\n  language: 'cz'\r\n};\r\n\r\nexport const main = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_NOTES_LIST:\r\n      return { ...state, notesList: payload };\r\n    case SET_SELECTED_NOTE:\r\n      return { ...state, selectedNote: payload };\r\n    case SET_CREATE_FLAG:\r\n      return { ...state, newNote: payload };\r\n    case SET_LANGUAGE:\r\n      return { ...state, language: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\nimport {\n  main\n} from \"../containers/main/reducers\";\n\nconst rootReducer = combineReducers({\n  main\n});\n\nexport default rootReducer;\n","import {applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport freeze from \"redux-freeze\";\n\nconst crashReporter = () => next => async action => {\n  try {\n    return await Promise.resolve(next(action));\n  } catch (err) {\n    // here can go any other automated error handling\n    // - such as displaying error messages to user, if they come from BE\n    // - or sending to some external logging tool\n    console.error(err);\n    next({type: \"ERROR\"});\n  }\n};\n\nconst middlewares = [];\nmiddlewares.push(crashReporter);\nmiddlewares.push(thunk);\n\n// freeze is only for development env\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(freeze);\n}\n\nlet middleware = applyMiddleware(...middlewares);\n// add the redux dev tools\nif (process.env.NODE_ENV !== \"production\" && window.devToolsExtension) {\n  middleware = compose(middleware, window.devToolsExtension());\n}\n\nexport default middleware;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Translate from \"./containers/translate/Translate\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./redux/reduxReducer\";\nimport reducerConf from \"./redux/reduxConf\";\nimport \"./main.scss\";\nimport \"../node_modules/antd/dist/antd.less\";\nimport \"../node_modules/antd/dist/antd.css\";\n\nconst store = createStore(rootReducer, reducerConf);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Translate />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}